{"version":3,"sources":["../node_modules/codemirror/mode/jsx/jsx.js","../node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","Context","state","mode","depth","prev","this","copyContext","context","copyState","defineMode","config","modeConfig","xmlMode","getMode","name","allowMissing","multilineTagIndentPastTag","allowMissingTagName","jsMode","base","flatXMLIndent","tagName","result","indent","token","stream","xmlToken","jsToken","cx","match","skipToEnd","peek","skipAttribute","xmlContext","startOfLine","indentUnit","lexical","indented","startState","stop","style","cur","current","test","indexOf","backUp","length","expressionAllowed","skipExpression","textAfter","fullLine","innerMode","defineMIME","typescript","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","caseFold","xmlConfig","editorConf","config_","type","setStyle","defaults","htmlMode","prop","inText","chain","parser","tokenize","ch","next","eat","inBlock","eatWhile","doctype","inTag","baseState","tagStart","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","terminator","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","eatSpace","Pass","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","xmlCurrentTag","close","xmlCurrentContext","push","reverse","mimeModes"],"mappings":"uGAUG,SAASA,GACV,aAKA,SAASC,EAAQC,EAAOC,EAAMC,EAAOC,GACnCC,KAAKJ,MAAQA,EAAOI,KAAKH,KAAOA,EAAMG,KAAKF,MAAQA,EAAOE,KAAKD,KAAOA,EAGxE,SAASE,EAAYC,GACnB,OAAO,IAAIP,EAAQD,EAAWS,UAAUD,EAAQL,KAAMK,EAAQN,OAC3CM,EAAQL,KACRK,EAAQJ,MACRI,EAAQH,MAAQE,EAAYC,EAAQH,OAGzDL,EAAWU,WAAW,OAAO,SAASC,EAAQC,GAC5C,IAAIC,EAAUb,EAAWc,QAAQH,EAAQ,CAACI,KAAM,MAAOC,cAAc,EAAMC,2BAA2B,EAAOC,qBAAqB,IAC9HC,EAASnB,EAAWc,QAAQH,EAAQC,GAAcA,EAAWQ,MAAQ,cAEzE,SAASC,EAAcnB,GACrB,IAAIoB,EAAUpB,EAAMoB,QACpBpB,EAAMoB,QAAU,KAChB,IAAIC,EAASV,EAAQW,OAAOtB,EAAO,GAAI,IAEvC,OADAA,EAAMoB,QAAUA,EACTC,EAGT,SAASE,EAAMC,EAAQxB,GACrB,OAAIA,EAAMM,QAAQL,MAAQU,EACjBc,EAASD,EAAQxB,EAAOA,EAAMM,SAE9BoB,EAAQF,EAAQxB,EAAOA,EAAMM,SAGxC,SAASmB,EAASD,EAAQxB,EAAO2B,GAC/B,GAAgB,GAAZA,EAAGzB,MAGL,OAFIsB,EAAOI,MAAM,YAAaD,EAAGzB,MAAQ,EACpCsB,EAAOK,YACL,UAGT,GAAqB,KAAjBL,EAAOM,OAAe,CACxBnB,EAAQoB,cAAcJ,EAAG3B,OAEzB,IAAIsB,EAASH,EAAcQ,EAAG3B,OAAQgC,EAAaL,EAAG3B,MAAMM,QAE5D,GAAI0B,GAAcR,EAAOI,MAAM,eAAe,GAAQ,CACpD,KAAOI,EAAW7B,OAAS6B,EAAWC,aACpCD,EAAaA,EAAW7B,KAEtB6B,EAAWC,YAAaX,GAAUb,EAAOyB,WAEpCP,EAAGxB,KAAKH,MAAMmC,UAASb,EAASK,EAAGxB,KAAKH,MAAMmC,QAAQC,eAE1C,GAAZT,EAAGzB,QACZoB,GAAUb,EAAOyB,YAKnB,OAFAlC,EAAMM,QAAU,IAAIP,EAAQD,EAAWuC,WAAWpB,EAAQK,GAC9BL,EAAQ,EAAGjB,EAAMM,SACtC,KAGT,GAAgB,GAAZqB,EAAGzB,MAAY,CACjB,GAAqB,KAAjBsB,EAAOM,OAIT,OAHAnB,EAAQoB,cAAcJ,EAAG3B,OACzBA,EAAMM,QAAU,IAAIP,EAAQD,EAAWuC,WAAW1B,EAASQ,EAAcQ,EAAG3B,QAChDW,EAAS,EAAGX,EAAMM,SACvC,KACF,GAAIkB,EAAOI,MAAM,MAEtB,OADAJ,EAAOK,YACA,UACF,GAAIL,EAAOI,MAAM,MAEtB,OADAD,EAAGzB,MAAQ,EACJqB,EAAMC,EAAQxB,GAIzB,IAAqEsC,EAAjEC,EAAQ5B,EAAQY,MAAMC,EAAQG,EAAG3B,OAAQwC,EAAMhB,EAAOiB,UAW1D,MAVI,UAAUC,KAAKH,GACb,KAAKG,KAAKF,GACRb,EAAG3B,MAAMM,QAASqB,EAAGzB,MAAQ,EAC5BF,EAAMM,QAAUN,EAAMM,QAAQH,KAC1B,KAAKuC,KAAKF,KACnBb,EAAGzB,MAAQ,IAEHqC,IAAUD,EAAOE,EAAIG,QAAQ,OAAS,GAChDnB,EAAOoB,OAAOJ,EAAIK,OAASP,GAEtBC,EAGT,SAASb,EAAQF,EAAQxB,EAAO2B,GAC9B,GAAqB,KAAjBH,EAAOM,QAAiBb,EAAO6B,kBAAkBtB,EAAQG,EAAG3B,OAI9D,OAHAiB,EAAO8B,eAAepB,EAAG3B,OACzBA,EAAMM,QAAU,IAAIP,EAAQD,EAAWuC,WAAW1B,EAASM,EAAOK,OAAOK,EAAG3B,MAAO,GAAI,KAC3DW,EAAS,EAAGX,EAAMM,SACvC,KAGT,IAAIiC,EAAQtB,EAAOM,MAAMC,EAAQG,EAAG3B,OACpC,IAAKuC,GAAqB,MAAZZ,EAAGzB,MAAe,CAC9B,IAAIsC,EAAMhB,EAAOiB,UACN,KAAPD,EACFb,EAAGzB,QACa,KAAPsC,GACS,KAAZb,EAAGzB,QAAYF,EAAMM,QAAUN,EAAMM,QAAQH,MAGvD,OAAOoC,EAGT,MAAO,CACLF,WAAY,WACV,MAAO,CAAC/B,QAAS,IAAIP,EAAQD,EAAWuC,WAAWpB,GAASA,KAG9DV,UAAW,SAASP,GAClB,MAAO,CAACM,QAASD,EAAYL,EAAMM,WAGrCiB,MAAOA,EAEPD,OAAQ,SAAStB,EAAOgD,EAAWC,GACjC,OAAOjD,EAAMM,QAAQL,KAAKqB,OAAOtB,EAAMM,QAAQN,MAAOgD,EAAWC,IAGnEC,UAAW,SAASlD,GAClB,OAAOA,EAAMM,YAGhB,MAAO,cAEVR,EAAWqD,WAAW,WAAY,OAClCrD,EAAWqD,WAAW,sBAAuB,CAACtC,KAAM,MAAOK,KAAM,CAACL,KAAM,aAAcuC,YAAY,KA7IhGC,CAAIC,EAAQ,IAAyBA,EAAQ,IAAeA,EAAQ,M,oBCKrE,SAASxD,GACZ,aAEA,IAAIyD,EAAa,CACfC,gBAAiB,CAAC,MAAQ,EAAM,MAAQ,EAAM,IAAM,EAAM,KAAO,EAAM,SAAW,EAChE,OAAS,EAAM,OAAS,EAAM,IAAM,EAAM,KAAO,EAAM,OAAS,EAChE,QAAU,EAAM,MAAQ,EAAM,MAAQ,EAAM,OAAS,EAAM,QAAU,EACrE,OAAS,EAAM,KAAO,EAAM,UAAY,GAC1DC,iBAAkB,CAAC,IAAM,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,GAAK,EAC/D,IAAM,EAAM,IAAM,EAAM,OAAS,EAAM,IAAM,EAAM,OAAS,EAC5D,IAAM,EAAM,IAAM,GACrCC,gBAAiB,CACf,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,GACb,OAAU,CAAC,QAAU,EAAM,UAAY,GACvC,SAAY,CAAC,UAAY,GACzB,EAAK,CAAC,SAAW,EAAM,SAAW,EAAM,OAAS,EAAM,YAAc,EAAM,KAAO,EAC5E,KAAO,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,MAAQ,EACnE,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAClE,QAAU,EAAM,QAAU,EAAM,IAAM,EAAM,MAAQ,EAAM,KAAO,EAAM,IAAM,EAC7E,GAAK,EAAM,KAAO,EAAM,SAAW,EAAM,OAAS,EAAM,IAAM,GACpE,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,GACnB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,IAEfC,YAAa,CAAC,KAAO,GACrBC,eAAe,EACf9C,cAAc,EACd+C,UAAU,GAGRC,EAAY,CACdN,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAa,GACbC,eAAe,EACf9C,cAAc,EACdE,qBAAqB,EACrB6C,UAAU,GAGZ/D,EAAWU,WAAW,OAAO,SAASuD,EAAYC,GAChD,IAOIC,EAAMC,EAPNhC,EAAa6B,EAAW7B,WACxBzB,EAAS,GACT0D,EAAWH,EAAQI,SAAWb,EAAaO,EAC/C,IAAK,IAAIO,KAAQF,EAAU1D,EAAO4D,GAAQF,EAASE,GACnD,IAAK,IAAIA,KAAQL,EAASvD,EAAO4D,GAAQL,EAAQK,GAKjD,SAASC,EAAO9C,EAAQxB,GACtB,SAASuE,EAAMC,GAEb,OADAxE,EAAMyE,SAAWD,EACVA,EAAOhD,EAAQxB,GAGxB,IAAI0E,EAAKlD,EAAOmD,OAChB,MAAU,KAAND,EACElD,EAAOoD,IAAI,KACTpD,EAAOoD,IAAI,KACTpD,EAAOI,MAAM,UAAkB2C,EAAMM,EAAQ,OAAQ,QAC7C,KACHrD,EAAOI,MAAM,MACf2C,EAAMM,EAAQ,UAAW,WACvBrD,EAAOI,MAAM,WAAW,GAAM,IACvCJ,EAAOsD,SAAS,aACTP,EAAMQ,EAAQ,KAEd,KAEAvD,EAAOoD,IAAI,MACpBpD,EAAOsD,SAAS,aAChB9E,EAAMyE,SAAWI,EAAQ,OAAQ,MAC1B,SAEPZ,EAAOzC,EAAOoD,IAAI,KAAO,WAAa,UACtC5E,EAAMyE,SAAWO,EACV,eAEM,KAANN,GAELlD,EAAOoD,IAAI,KACTpD,EAAOoD,IAAI,KACRpD,EAAOsD,SAAS,eAAiBtD,EAAOoD,IAAI,KAE5CpD,EAAOsD,SAAS,SAAWtD,EAAOoD,IAAI,KAGxCpD,EAAOsD,SAAS,cAAgBtD,EAAOoD,IAAI,MAEtC,OAAS,SAErBpD,EAAOsD,SAAS,SACT,MAKX,SAASE,EAAMxD,EAAQxB,GACrB,IAAI0E,EAAKlD,EAAOmD,OAChB,GAAU,KAAND,GAAoB,KAANA,GAAalD,EAAOoD,IAAI,KAGxC,OAFA5E,EAAMyE,SAAWH,EACjBL,EAAa,KAANS,EAAY,SAAW,eACvB,cACF,GAAU,KAANA,EAET,OADAT,EAAO,SACA,KACF,GAAU,KAANS,EAAW,CACpB1E,EAAMyE,SAAWH,EACjBtE,EAAMA,MAAQiF,EACdjF,EAAMoB,QAAUpB,EAAMkF,SAAW,KACjC,IAAIP,EAAO3E,EAAMyE,SAASjD,EAAQxB,GAClC,OAAO2E,EAAOA,EAAO,aAAe,YAC/B,MAAI,SAASjC,KAAKgC,IACvB1E,EAAMyE,SAAWU,EAAYT,GAC7B1E,EAAMoF,eAAiB5D,EAAO6D,SACvBrF,EAAMyE,SAASjD,EAAQxB,KAE9BwB,EAAOI,MAAM,4CACN,QAIX,SAASuD,EAAYG,GACnB,IAAIC,EAAU,SAAS/D,EAAQxB,GAC7B,MAAQwB,EAAOgE,OACb,GAAIhE,EAAOmD,QAAUW,EAAO,CAC1BtF,EAAMyE,SAAWO,EACjB,MAGJ,MAAO,UAGT,OADAO,EAAQE,eAAgB,EACjBF,EAGT,SAASV,EAAQtC,EAAOmD,GACtB,OAAO,SAASlE,EAAQxB,GACtB,MAAQwB,EAAOgE,OAAO,CACpB,GAAIhE,EAAOI,MAAM8D,GAAa,CAC5B1F,EAAMyE,SAAWH,EACjB,MAEF9C,EAAOmD,OAET,OAAOpC,GAIX,SAASwC,EAAQ7E,GACf,OAAO,SAASsB,EAAQxB,GAEtB,IADA,IAAI0E,EAC2B,OAAvBA,EAAKlD,EAAOmD,SAAiB,CACnC,GAAU,KAAND,EAEF,OADA1E,EAAMyE,SAAWM,EAAQ7E,EAAQ,GAC1BF,EAAMyE,SAASjD,EAAQxB,GACzB,GAAU,KAAN0E,EAAW,CACpB,GAAa,GAATxE,EAAY,CACdF,EAAMyE,SAAWH,EACjB,MAGA,OADAtE,EAAMyE,SAAWM,EAAQ7E,EAAQ,GAC1BF,EAAMyE,SAASjD,EAAQxB,IAIpC,MAAO,QAIX,SAASD,EAAQC,EAAOoB,EAASa,GAC/B7B,KAAKD,KAAOH,EAAMM,QAClBF,KAAKgB,QAAUA,GAAW,GAC1BhB,KAAKkB,OAAStB,EAAMoC,SACpBhC,KAAK6B,YAAcA,GACfxB,EAAOkD,YAAYgC,eAAevE,IAAapB,EAAMM,SAAWN,EAAMM,QAAQsF,YAChFxF,KAAKwF,UAAW,GAEpB,SAASC,EAAW7F,GACdA,EAAMM,UAASN,EAAMM,QAAUN,EAAMM,QAAQH,MAEnD,SAAS2F,EAAgB9F,EAAO+F,GAE9B,IADA,IAAIC,IACS,CACX,IAAKhG,EAAMM,QACT,OAGF,GADA0F,EAAgBhG,EAAMM,QAAQc,SACzBX,EAAOiD,gBAAgBiC,eAAeK,KACtCvF,EAAOiD,gBAAgBsC,GAAeL,eAAeI,GACxD,OAEFF,EAAW7F,IAIf,SAASiF,EAAUhB,EAAMzC,EAAQxB,GAC/B,MAAY,WAARiE,GACFjE,EAAMkF,SAAW1D,EAAO6D,SACjBY,GACU,YAARhC,EACFiC,EAEAjB,EAGX,SAASgB,EAAahC,EAAMzC,EAAQxB,GAClC,MAAY,QAARiE,GACFjE,EAAMoB,QAAUI,EAAOiB,UACvByB,EAAW,MACJiC,GACE1F,EAAOO,qBAA+B,UAARiD,GACvCC,EAAW,cACJiC,EAAUlC,EAAMzC,EAAQxB,KAE/BkE,EAAW,QACJ+B,GAGX,SAASC,EAAkBjC,EAAMzC,EAAQxB,GACvC,GAAY,QAARiE,EAAgB,CAClB,IAAI7C,EAAUI,EAAOiB,UAIrB,OAHIzC,EAAMM,SAAWN,EAAMM,QAAQc,SAAWA,GAC1CX,EAAOgD,iBAAiBkC,eAAe3F,EAAMM,QAAQc,UACvDyE,EAAW7F,GACRA,EAAMM,SAAWN,EAAMM,QAAQc,SAAWA,IAAoC,IAAxBX,EAAO2F,cAChElC,EAAW,MACJmC,IAEPnC,EAAW,YACJoC,GAEJ,OAAI7F,EAAOO,qBAA+B,UAARiD,GACvCC,EAAW,cACJmC,EAAWpC,EAAMzC,EAAQxB,KAEhCkE,EAAW,QACJoC,GAIX,SAASD,EAAWpC,EAAMsC,EAASvG,GACjC,MAAY,UAARiE,GACFC,EAAW,QACJmC,IAETR,EAAW7F,GACJiF,GAET,SAASqB,EAAcrC,EAAMzC,EAAQxB,GAEnC,OADAkE,EAAW,QACJmC,EAAWpC,EAAMzC,EAAQxB,GAGlC,SAASmG,EAAUlC,EAAMsC,EAASvG,GAChC,GAAY,QAARiE,EAEF,OADAC,EAAW,YACJsC,EACF,GAAY,UAARvC,GAA4B,gBAARA,EAAwB,CACrD,IAAI7C,EAAUpB,EAAMoB,QAAS8D,EAAWlF,EAAMkF,SAS9C,OARAlF,EAAMoB,QAAUpB,EAAMkF,SAAW,KACrB,gBAARjB,GACAxD,EAAO+C,gBAAgBmC,eAAevE,GACxC0E,EAAgB9F,EAAOoB,IAEvB0E,EAAgB9F,EAAOoB,GACvBpB,EAAMM,QAAU,IAAIP,EAAQC,EAAOoB,EAAS8D,GAAYlF,EAAMoC,WAEzD6C,EAGT,OADAf,EAAW,QACJiC,EAET,SAASK,EAAYvC,EAAMzC,EAAQxB,GACjC,MAAY,UAARiE,EAAyBwC,GACxBhG,EAAOK,eAAcoD,EAAW,SAC9BiC,EAAUlC,EAAMzC,EAAQxB,IAEjC,SAASyG,EAAexC,EAAMzC,EAAQxB,GACpC,MAAY,UAARiE,EAAyByC,EACjB,QAARzC,GAAkBxD,EAAOmD,eAAgBM,EAAW,SAAiBiC,IACzEjC,EAAW,QACJiC,EAAUlC,EAAMzC,EAAQxB,IAEjC,SAAS0G,EAAmBzC,EAAMzC,EAAQxB,GACxC,MAAY,UAARiE,EAAyByC,EACtBP,EAAUlC,EAAMzC,EAAQxB,GAGjC,OAlMAsE,EAAOqC,UAAW,EAkMX,CACLtE,WAAY,SAASuE,GACnB,IAAI5G,EAAQ,CAACyE,SAAUH,EACVtE,MAAOiF,EACP7C,SAAUwE,GAAc,EACxBxF,QAAS,KAAM8D,SAAU,KACzB5E,QAAS,MAEtB,OADkB,MAAdsG,IAAoB5G,EAAM4G,WAAaA,GACpC5G,GAGTuB,MAAO,SAASC,EAAQxB,GAItB,IAHKA,EAAMoB,SAAWI,EAAOqF,QAC3B7G,EAAMoC,SAAWZ,EAAOsF,eAEtBtF,EAAOuF,WAAY,OAAO,KAC9B9C,EAAO,KACP,IAAI1B,EAAQvC,EAAMyE,SAASjD,EAAQxB,GAOnC,OANKuC,GAAS0B,IAAkB,WAAT1B,IACrB2B,EAAW,KACXlE,EAAMA,MAAQA,EAAMA,MAAMiE,GAAQ1B,EAAOf,EAAQxB,GAC7CkE,IACF3B,EAAoB,SAAZ2B,EAAsB3B,EAAQ,SAAW2B,IAE9C3B,GAGTjB,OAAQ,SAAStB,EAAOgD,EAAWC,GACjC,IAAI3C,EAAUN,EAAMM,QAEpB,GAAIN,EAAMyE,SAASgB,cACjB,OAAIzF,EAAMkF,UAAYlF,EAAMoC,SACnBpC,EAAMoF,eAAiB,EAEvBpF,EAAMoC,SAAWF,EAE5B,GAAI5B,GAAWA,EAAQsF,SAAU,OAAO9F,EAAWkH,KACnD,GAAIhH,EAAMyE,UAAYO,GAAShF,EAAMyE,UAAYH,EAC/C,OAAOrB,EAAWA,EAASrB,MAAM,UAAU,GAAGiB,OAAS,EAEzD,GAAI7C,EAAMoB,QACR,OAAyC,IAArCX,EAAOM,0BACFf,EAAMkF,SAAWlF,EAAMoB,QAAQyB,OAAS,EAExC7C,EAAMkF,SAAWhD,GAAczB,EAAOwG,0BAA4B,GAE7E,GAAIxG,EAAOyG,YAAc,cAAcxE,KAAKM,GAAY,OAAO,EAC/D,IAAImE,EAAWnE,GAAa,sBAAsBoE,KAAKpE,GACvD,GAAImE,GAAYA,EAAS,GACvB,KAAO7G,GAAS,CACd,GAAIA,EAAQc,SAAW+F,EAAS,GAAI,CAClC7G,EAAUA,EAAQH,KAClB,MACK,IAAIM,EAAOgD,iBAAiBkC,eAAerF,EAAQc,SAGxD,MAFAd,EAAUA,EAAQH,UAKjB,GAAIgH,EACT,KAAO7G,GAAS,CACd,IAAI+G,EAAW5G,EAAOiD,gBAAgBpD,EAAQc,SAC9C,IAAIiG,IAAYA,EAAS1B,eAAewB,EAAS,IAG/C,MAFA7G,EAAUA,EAAQH,KAKxB,KAAOG,GAAWA,EAAQH,OAASG,EAAQ2B,aACzC3B,EAAUA,EAAQH,KACpB,OAAIG,EAAgBA,EAAQgB,OAASY,EACzBlC,EAAM4G,YAAc,GAGlCU,cAAe,gBACfC,kBAAmB,UACnBC,gBAAiB,SAEjBC,cAAehH,EAAO2D,SAAW,OAAS,MAC1CsD,WAAYjH,EAAO2D,SAAW,OAAS,MAEvCrC,cAAe,SAAS/B,GAClBA,EAAMA,OAASyG,IACjBzG,EAAMA,MAAQmG,IAGlBwB,cAAe,SAAS3H,GACtB,OAAOA,EAAMoB,QAAU,CAACP,KAAMb,EAAMoB,QAASwG,MAAqB,YAAd5H,EAAMiE,MAAsB,MAGlF4D,kBAAmB,SAAS7H,GAE1B,IADA,IAAIM,EAAU,GACLqB,EAAK3B,EAAMM,QAASqB,EAAIA,EAAKA,EAAGxB,KACvCG,EAAQwH,KAAKnG,EAAGP,SAClB,OAAOd,EAAQyH,eAKrBjI,EAAWqD,WAAW,WAAY,OAClCrD,EAAWqD,WAAW,kBAAmB,OACpCrD,EAAWkI,UAAUrC,eAAe,cACvC7F,EAAWqD,WAAW,YAAa,CAACtC,KAAM,MAAOuD,UAAU,IArZzDf,CAAIC,EAAQ","file":"static/js/28.48b60d33.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  // Depth means the amount of open braces in JS context, in XML\n  // context 0 means not in tag, 1 means in tag, and 2 means in tag\n  // and js block comment.\n  function Context(state, mode, depth, prev) {\n    this.state = state; this.mode = mode; this.depth = depth; this.prev = prev\n  }\n\n  function copyContext(context) {\n    return new Context(CodeMirror.copyState(context.mode, context.state),\n                       context.mode,\n                       context.depth,\n                       context.prev && copyContext(context.prev))\n  }\n\n  CodeMirror.defineMode(\"jsx\", function(config, modeConfig) {\n    var xmlMode = CodeMirror.getMode(config, {name: \"xml\", allowMissing: true, multilineTagIndentPastTag: false, allowMissingTagName: true})\n    var jsMode = CodeMirror.getMode(config, modeConfig && modeConfig.base || \"javascript\")\n\n    function flatXMLIndent(state) {\n      var tagName = state.tagName\n      state.tagName = null\n      var result = xmlMode.indent(state, \"\", \"\")\n      state.tagName = tagName\n      return result\n    }\n\n    function token(stream, state) {\n      if (state.context.mode == xmlMode)\n        return xmlToken(stream, state, state.context)\n      else\n        return jsToken(stream, state, state.context)\n    }\n\n    function xmlToken(stream, state, cx) {\n      if (cx.depth == 2) { // Inside a JS /* */ comment\n        if (stream.match(/^.*?\\*\\//)) cx.depth = 1\n        else stream.skipToEnd()\n        return \"comment\"\n      }\n\n      if (stream.peek() == \"{\") {\n        xmlMode.skipAttribute(cx.state)\n\n        var indent = flatXMLIndent(cx.state), xmlContext = cx.state.context\n        // If JS starts on same line as tag\n        if (xmlContext && stream.match(/^[^>]*>\\s*$/, false)) {\n          while (xmlContext.prev && !xmlContext.startOfLine)\n            xmlContext = xmlContext.prev\n          // If tag starts the line, use XML indentation level\n          if (xmlContext.startOfLine) indent -= config.indentUnit\n          // Else use JS indentation level\n          else if (cx.prev.state.lexical) indent = cx.prev.state.lexical.indented\n        // Else if inside of tag\n        } else if (cx.depth == 1) {\n          indent += config.indentUnit\n        }\n\n        state.context = new Context(CodeMirror.startState(jsMode, indent),\n                                    jsMode, 0, state.context)\n        return null\n      }\n\n      if (cx.depth == 1) { // Inside of tag\n        if (stream.peek() == \"<\") { // Tag inside of tag\n          xmlMode.skipAttribute(cx.state)\n          state.context = new Context(CodeMirror.startState(xmlMode, flatXMLIndent(cx.state)),\n                                      xmlMode, 0, state.context)\n          return null\n        } else if (stream.match(\"//\")) {\n          stream.skipToEnd()\n          return \"comment\"\n        } else if (stream.match(\"/*\")) {\n          cx.depth = 2\n          return token(stream, state)\n        }\n      }\n\n      var style = xmlMode.token(stream, cx.state), cur = stream.current(), stop\n      if (/\\btag\\b/.test(style)) {\n        if (/>$/.test(cur)) {\n          if (cx.state.context) cx.depth = 0\n          else state.context = state.context.prev\n        } else if (/^</.test(cur)) {\n          cx.depth = 1\n        }\n      } else if (!style && (stop = cur.indexOf(\"{\")) > -1) {\n        stream.backUp(cur.length - stop)\n      }\n      return style\n    }\n\n    function jsToken(stream, state, cx) {\n      if (stream.peek() == \"<\" && jsMode.expressionAllowed(stream, cx.state)) {\n        jsMode.skipExpression(cx.state)\n        state.context = new Context(CodeMirror.startState(xmlMode, jsMode.indent(cx.state, \"\", \"\")),\n                                    xmlMode, 0, state.context)\n        return null\n      }\n\n      var style = jsMode.token(stream, cx.state)\n      if (!style && cx.depth != null) {\n        var cur = stream.current()\n        if (cur == \"{\") {\n          cx.depth++\n        } else if (cur == \"}\") {\n          if (--cx.depth == 0) state.context = state.context.prev\n        }\n      }\n      return style\n    }\n\n    return {\n      startState: function() {\n        return {context: new Context(CodeMirror.startState(jsMode), jsMode)}\n      },\n\n      copyState: function(state) {\n        return {context: copyContext(state.context)}\n      },\n\n      token: token,\n\n      indent: function(state, textAfter, fullLine) {\n        return state.context.mode.indent(state.context.state, textAfter, fullLine)\n      },\n\n      innerMode: function(state) {\n        return state.context\n      }\n    }\n  }, \"xml\", \"javascript\")\n\n  CodeMirror.defineMIME(\"text/jsx\", \"jsx\")\n  CodeMirror.defineMIME(\"text/typescript-jsx\", {name: \"jsx\", base: {name: \"javascript\", typescript: true}})\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"sourceRoot":""}