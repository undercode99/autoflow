{"version":3,"sources":["../node_modules/codemirror/mode/tornado/tornado.js","../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","defineMode","keywords","tokenBase","stream","state","eatWhile","ch","next","eat","tokenize","inTag","close","match","RegExp","join","startState","token","config","htmlBase","getMode","tornadoInner","overlayMode","defineMIME","mod","require","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","chain","parser","inBlock","doctype","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","Context","startOfLine","this","prev","context","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","eatSpace","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","local"],"mappings":"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","file":"static/js/12.06892da3.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"tornado:inner\", function() {\n    var keywords = [\"and\",\"as\",\"assert\",\"autoescape\",\"block\",\"break\",\"class\",\"comment\",\"context\",\n                    \"continue\",\"datetime\",\"def\",\"del\",\"elif\",\"else\",\"end\",\"escape\",\"except\",\n                    \"exec\",\"extends\",\"false\",\"finally\",\"for\",\"from\",\"global\",\"if\",\"import\",\"in\",\n                    \"include\",\"is\",\"json_encode\",\"lambda\",\"length\",\"linkify\",\"load\",\"module\",\n                    \"none\",\"not\",\"or\",\"pass\",\"print\",\"put\",\"raise\",\"raw\",\"return\",\"self\",\"set\",\n                    \"squeeze\",\"super\",\"true\",\"try\",\"url_escape\",\"while\",\"with\",\"without\",\"xhtml_escape\",\"yield\"];\n    keywords = new RegExp(\"^((\" + keywords.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      stream.eatWhile(/[^\\{]/);\n      var ch = stream.next();\n      if (ch == \"{\") {\n        if (ch = stream.eat(/\\{|%|#/)) {\n          state.tokenize = inTag(ch);\n          return \"tag\";\n        }\n      }\n    }\n    function inTag (close) {\n      if (close == \"{\") {\n        close = \"}\";\n      }\n      return function (stream, state) {\n        var ch = stream.next();\n        if ((ch == close) && stream.eat(\"}\")) {\n          state.tokenize = tokenBase;\n          return \"tag\";\n        }\n        if (stream.match(keywords)) {\n          return \"keyword\";\n        }\n        return close == \"#\" ? \"comment\" : \"string\";\n      };\n    }\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      }\n    };\n  });\n\n  CodeMirror.defineMode(\"tornado\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var tornadoInner = CodeMirror.getMode(config, \"tornado:inner\");\n    return CodeMirror.overlayMode(htmlBase, tornadoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-tornado\", \"tornado\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}