{"version":3,"sources":["../node_modules/codemirror/mode/php/php.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","keywords","str","obj","words","split","i","length","matchSequence","list","end","escapes","phpString","stream","state","patterns","match","tokenize","slice","closing","phpString_","escaped","eol","tokStack","pop","next","phpKeywords","phpAtoms","phpBuiltin","registerHelper","join","phpConfig","name","helperType","blockKeywords","defKeywords","atoms","builtin","multiLineStrings","hooks","eatWhile","before","quoted","eat","delim","current","push","_stream","defineMode","config","parserConfig","htmlMode","getMode","phpMode","dispatch","isPHP","curMode","sol","pending","php","curState","html","context","prev","token","startState","indent","style","pos","m","cur","openPHP","search","test","backUp","startOpen","copyState","htmlNew","phpNew","textAfter","line","blockCommentStart","blockCommentEnd","lineComment","innerMode","mode","defineMIME","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","ch","inBlock","doctype","inTag","baseState","tagName","tagStart","inAttribute","stringStartCol","column","quote","closure","isInAttribute","terminator","depth","Context","startOfLine","this","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","defaultTags","script","maybeBackup","pat","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","unshift","findMatchingMode","tagInfo","tagText","spec","tags","configTags","configScript","scriptTypes","matches","htmlState","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","local"],"mappings":"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","file":"static/js/17.5a706f70.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../clike/clike\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../clike/clike\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function keywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  // Helper for phpString\n  function matchSequence(list, end, escapes) {\n    if (list.length == 0) return phpString(end);\n    return function (stream, state) {\n      var patterns = list[0];\n      for (var i = 0; i < patterns.length; i++) if (stream.match(patterns[i][0])) {\n        state.tokenize = matchSequence(list.slice(1), end);\n        return patterns[i][1];\n      }\n      state.tokenize = phpString(end, escapes);\n      return \"string\";\n    };\n  }\n  function phpString(closing, escapes) {\n    return function(stream, state) { return phpString_(stream, state, closing, escapes); };\n  }\n  function phpString_(stream, state, closing, escapes) {\n    // \"Complex\" syntax\n    if (escapes !== false && stream.match(\"${\", false) || stream.match(\"{$\", false)) {\n      state.tokenize = null;\n      return \"string\";\n    }\n\n    // Simple syntax\n    if (escapes !== false && stream.match(/^\\$[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      // After the variable name there may appear array or object operator.\n      if (stream.match(\"[\", false)) {\n        // Match array operator\n        state.tokenize = matchSequence([\n          [[\"[\", null]],\n          [[/\\d[\\w\\.]*/, \"number\"],\n           [/\\$[a-zA-Z_][a-zA-Z0-9_]*/, \"variable-2\"],\n           [/[\\w\\$]+/, \"variable\"]],\n          [[\"]\", null]]\n        ], closing, escapes);\n      }\n      if (stream.match(/^->\\w/, false)) {\n        // Match object operator\n        state.tokenize = matchSequence([\n          [[\"->\", null]],\n          [[/[\\w]+/, \"variable\"]]\n        ], closing, escapes);\n      }\n      return \"variable-2\";\n    }\n\n    var escaped = false;\n    // Normal string\n    while (!stream.eol() &&\n           (escaped || escapes === false ||\n            (!stream.match(\"{$\", false) &&\n             !stream.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*|\\$\\{)/, false)))) {\n      if (!escaped && stream.match(closing)) {\n        state.tokenize = null;\n        state.tokStack.pop(); state.tokStack.pop();\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  var phpKeywords = \"abstract and array as break case catch class clone const continue declare default \" +\n    \"do else elseif enddeclare endfor endforeach endif endswitch endwhile extends final \" +\n    \"for foreach function global goto if implements interface instanceof namespace \" +\n    \"new or private protected public static switch throw trait try use var while xor \" +\n    \"die echo empty exit eval include include_once isset list require require_once return \" +\n    \"print unset __halt_compiler self static parent yield insteadof finally\";\n  var phpAtoms = \"true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__ __TRAIT__\";\n  var phpBuiltin = \"func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex hex2bin sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents file_put_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists array_intersect_key array_combine array_column pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport http_response_code get_declared_traits getimagesizefromstring socket_import_stream stream_set_chunk_size trait_exists header_register_callback class_uses session_status session_register_shutdown echo print global static exit array empty eval isset unset die include require include_once require_once json_decode json_encode json_last_error json_last_error_msg curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt_array curl_setopt curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect_errno mysqli_connect_error mysqli_connect mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error_list mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field_direct mysqli_fetch_field mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_charset mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_version mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_reap_async_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_init mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count\";\n  CodeMirror.registerHelper(\"hintWords\", \"php\", [phpKeywords, phpAtoms, phpBuiltin].join(\" \").split(\" \"));\n  CodeMirror.registerHelper(\"wordChars\", \"php\", /[\\w$]/);\n\n  var phpConfig = {\n    name: \"clike\",\n    helperType: \"php\",\n    keywords: keywords(phpKeywords),\n    blockKeywords: keywords(\"catch do else elseif for foreach if switch try while finally\"),\n    defKeywords: keywords(\"class function interface namespace trait\"),\n    atoms: keywords(phpAtoms),\n    builtin: keywords(phpBuiltin),\n    multiLineStrings: true,\n    hooks: {\n      \"$\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"variable-2\";\n      },\n      \"<\": function(stream, state) {\n        var before;\n        if (before = stream.match(/^<<\\s*/)) {\n          var quoted = stream.eat(/['\"]/);\n          stream.eatWhile(/[\\w\\.]/);\n          var delim = stream.current().slice(before[0].length + (quoted ? 2 : 1));\n          if (quoted) stream.eat(quoted);\n          if (delim) {\n            (state.tokStack || (state.tokStack = [])).push(delim, 0);\n            state.tokenize = phpString(delim, quoted != \"'\");\n            return \"string\";\n          }\n        }\n        return false;\n      },\n      \"#\": function(stream) {\n        while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n        return \"comment\";\n      },\n      \"/\": function(stream) {\n        if (stream.eat(\"/\")) {\n          while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n          return \"comment\";\n        }\n        return false;\n      },\n      '\"': function(_stream, state) {\n        (state.tokStack || (state.tokStack = [])).push('\"', 0);\n        state.tokenize = phpString('\"');\n        return \"string\";\n      },\n      \"{\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length)\n          state.tokStack[state.tokStack.length - 1]++;\n        return false;\n      },\n      \"}\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length > 0 &&\n            !--state.tokStack[state.tokStack.length - 1]) {\n          state.tokenize = phpString(state.tokStack[state.tokStack.length - 2]);\n        }\n        return false;\n      }\n    }\n  };\n\n  CodeMirror.defineMode(\"php\", function(config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, (parserConfig && parserConfig.htmlMode) || \"text/html\");\n    var phpMode = CodeMirror.getMode(config, phpConfig);\n\n    function dispatch(stream, state) {\n      var isPHP = state.curMode == phpMode;\n      if (stream.sol() && state.pending && state.pending != '\"' && state.pending != \"'\") state.pending = null;\n      if (!isPHP) {\n        if (stream.match(/^<\\?\\w*/)) {\n          state.curMode = phpMode;\n          if (!state.php) state.php = CodeMirror.startState(phpMode, htmlMode.indent(state.html, \"\", \"\"))\n          state.curState = state.php;\n          return \"meta\";\n        }\n        if (state.pending == '\"' || state.pending == \"'\") {\n          while (!stream.eol() && stream.next() != state.pending) {}\n          var style = \"string\";\n        } else if (state.pending && stream.pos < state.pending.end) {\n          stream.pos = state.pending.end;\n          var style = state.pending.style;\n        } else {\n          var style = htmlMode.token(stream, state.curState);\n        }\n        if (state.pending) state.pending = null;\n        var cur = stream.current(), openPHP = cur.search(/<\\?/), m;\n        if (openPHP != -1) {\n          if (style == \"string\" && (m = cur.match(/[\\'\\\"]$/)) && !/\\?>/.test(cur)) state.pending = m[0];\n          else state.pending = {end: stream.pos, style: style};\n          stream.backUp(cur.length - openPHP);\n        }\n        return style;\n      } else if (isPHP && state.php.tokenize == null && stream.match(\"?>\")) {\n        state.curMode = htmlMode;\n        state.curState = state.html;\n        if (!state.php.context.prev) state.php = null;\n        return \"meta\";\n      } else {\n        return phpMode.token(stream, state.curState);\n      }\n    }\n\n    return {\n      startState: function() {\n        var html = CodeMirror.startState(htmlMode)\n        var php = parserConfig.startOpen ? CodeMirror.startState(phpMode) : null\n        return {html: html,\n                php: php,\n                curMode: parserConfig.startOpen ? phpMode : htmlMode,\n                curState: parserConfig.startOpen ? php : html,\n                pending: null};\n      },\n\n      copyState: function(state) {\n        var html = state.html, htmlNew = CodeMirror.copyState(htmlMode, html),\n            php = state.php, phpNew = php && CodeMirror.copyState(phpMode, php), cur;\n        if (state.curMode == htmlMode) cur = htmlNew;\n        else cur = phpNew;\n        return {html: htmlNew, php: phpNew, curMode: state.curMode, curState: cur,\n                pending: state.pending};\n      },\n\n      token: dispatch,\n\n      indent: function(state, textAfter, line) {\n        if ((state.curMode != phpMode && /^\\s*<\\//.test(textAfter)) ||\n            (state.curMode == phpMode && /^\\?>/.test(textAfter)))\n          return htmlMode.indent(state.html, textAfter, line);\n        return state.curMode.indent(state.curState, textAfter, line);\n      },\n\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n\n      innerMode: function(state) { return {state: state.curState, mode: state.curMode}; }\n    };\n  }, \"htmlmixed\", \"clike\");\n\n  CodeMirror.defineMIME(\"application/x-httpd-php\", \"php\");\n  CodeMirror.defineMIME(\"application/x-httpd-php-open\", {name: \"php\", startOpen: true});\n  CodeMirror.defineMIME(\"text/x-php\", phpConfig);\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}